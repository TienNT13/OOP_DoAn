package do_an_1;

import javax.swing.*;
import java.awt.*;
import java.io.IOException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;

public class PanelSanPham extends JPanel {
    private JTable table;
    private List<SanPham> dsSanPham;
    private DataManager<SanPham> dataManager;

    public PanelSanPham() {
        dataManager = new FileDataManager<>();
        dsSanPham = new ArrayList<>();
        try {
            dsSanPham = dataManager.loadFromFile("sanpham.dat");
        } catch (IOException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi đọc file sản phẩm: " + e.getMessage());
        }

        setLayout(new BorderLayout());
        setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        // Cấu hình bảng sản phẩm
        String[] columns = {"Mã SP", "Tên", "Hãng", "Giá", "Số lượng", "Chip", "Số camera", "Pin (mAh)", "Màn hình (inch)"};
        Object[][] data = new Object[dsSanPham.size()][9];
        for (int i = 0; i < dsSanPham.size(); i++) {
            SanPham sp = dsSanPham.get(i);
            data[i] = new Object[]{sp.getMaSP(), sp.getTen(), sp.getHang(), formatPrice(sp.getGia()), sp.getSoLuong(), sp.getChip(), sp.getSoCamera(), sp.getDungLuongPin(), sp.getKichThuocManHinh()};
        }

        table = new JTable(data, columns);
        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent e) {
                int row = table.getSelectedRow();
                if (row >= 0) {
                    // Lấy sản phẩm được chọn
                    SanPham selectedProduct = dsSanPham.get(row);
                    // Hiển thị chi tiết sản phẩm
                    showProductDetails(selectedProduct);
                }
            }
        });

        add(new JScrollPane(table), BorderLayout.CENTER);
    }

    // Phương thức format giá tiền
    private String formatPrice(double price) {
        DecimalFormat formatter = new DecimalFormat("#,###");
        return formatter.format(price) + " VND";
    }

    // Phương thức hiển thị chi tiết sản phẩm
    private void showProductDetails(SanPham sp) {
        // Tạo cửa sổ chi tiết sản phẩm
        JDialog detailDialog = new JDialog();
        detailDialog.setTitle("Chi tiết sản phẩm: " + sp.getTen());
        detailDialog.setSize(600, 600);
        detailDialog.setLocationRelativeTo(this);

        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());
        panel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        // Thêm bảng thông tin sản phẩm
        String[] columns = {"Thông tin", "Chi tiết"};
        Object[][] data = {
            {"Mã SP", sp.getMaSP()},
            {"Tên sản phẩm", sp.getTen()},
            {"Hãng", sp.getHang()},
            {"Giá", formatPrice(sp.getGia())},
            {"Số lượng", String.valueOf(sp.getSoLuong())},
            {"Chip", sp.getChip()},
            {"Số camera", String.valueOf(sp.getSoCamera())},
            {"Dung lượng pin", String.valueOf(sp.getDungLuongPin()) + " mAh"},
            {"Kích thước màn hình", String.valueOf(sp.getKichThuocManHinh()) + " inch"}
        };

        JTable infoTable = new JTable(data, columns);
        infoTable.setEnabled(false);  // Bảng không cho chỉnh sửa
        panel.add(new JScrollPane(infoTable), BorderLayout.CENTER);

        // Thêm hình ảnh minh họa sản phẩm
        if (!sp.getHinhMinhHoa().isEmpty()) {
            try {
                ImageIcon imageIcon = new ImageIcon(sp.getHinhMinhHoa());
                Image image = imageIcon.getImage(); // Không sử dụng getScaledInstance nữa
                JLabel imageLabel = new JLabel(new ImageIcon(image));
                panel.add(imageLabel, BorderLayout.SOUTH);
            } catch (Exception e) {
                panel.add(new JLabel("Không thể tải hình ảnh"), BorderLayout.SOUTH);
            }
        } else {
            panel.add(new JLabel("Không có hình ảnh"), BorderLayout.SOUTH);
        }

        // Thêm nút đóng
        JButton closeButton = new JButton("Đóng");
        closeButton.addActionListener(e -> detailDialog.dispose());
        panel.add(closeButton, BorderLayout.NORTH);

        detailDialog.add(panel);
        detailDialog.setModal(true);
        detailDialog.setVisible(true);
    }
}
