package do_an_1;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.*;
import java.io.File;
import java.util.ArrayList;
import java.util.List;

public class PanelSanPham extends JPanel {
    private List<SanPham> dsSanPham;
    private JTable table;
    private JTextField txtSearch;
    private DataManager<SanPham> spDataManager;

    public PanelSanPham() {
        spDataManager = new FileDataManager<>();
        dsSanPham = new ArrayList<>();

        try {
            dsSanPham = spDataManager.loadFromFile("sanpham.dat");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi đọc file sản phẩm: " + e.getMessage());
        }

        setLayout(new BorderLayout());
        setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        // Tạo bảng để hiển thị danh sách sản phẩm
        String[] columns = {"Mã SP", "Tên sản phẩm", "Hãng", "Giá", "Số lượng", "Chip", "Số camera", "Pin (mAh)", "Màn hình (inch)", "Hình minh họa"};
        Object[][] data = getProductData();
        table = new JTable(new DefaultTableModel(data, columns));
        JScrollPane scrollPane = new JScrollPane(table);
        add(scrollPane, BorderLayout.CENTER);

        // Tạo form tìm kiếm
        JPanel searchPanel = new JPanel(new FlowLayout());
        searchPanel.add(new JLabel("Tìm kiếm:"));
        txtSearch = new JTextField(20);
        searchPanel.add(txtSearch);
        JButton btnSearch = new JButton("Tìm");
        btnSearch.addActionListener(this::searchProduct);
        searchPanel.add(btnSearch);
        add(searchPanel, BorderLayout.NORTH);

        // Tạo các nút chức năng Thêm, Sửa, Xóa
        JPanel buttonPanel = new JPanel();
        JButton btnAdd = new JButton("Thêm sản phẩm");
        JButton btnEdit = new JButton("Sửa sản phẩm");
        JButton btnDelete = new JButton("Xóa sản phẩm");

        btnAdd.addActionListener(this::addProduct);
        btnEdit.addActionListener(this::editProduct);
        btnDelete.addActionListener(this::deleteProduct);

        buttonPanel.add(btnAdd);
        buttonPanel.add(btnEdit);
        buttonPanel.add(btnDelete);
        add(buttonPanel, BorderLayout.SOUTH);

        // MouseListener để hiển thị thông tin chi tiết sản phẩm khi nhấn vào dòng sản phẩm trong bảng
        table.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int row = table.getSelectedRow();
                if (row != -1) {
                    SanPham selectedProduct = dsSanPham.get(row);
                    showProductDetails(selectedProduct);
                }
            }
        });
    }

    // Phương thức để thêm sản phẩm
    private void addProduct(ActionEvent e) {
        // Tạo cửa sổ nhập thông tin sản phẩm
        JTextField txtMaSP = new JTextField(15);
        JTextField txtTenSP = new JTextField(15);
        JTextField txtHang = new JTextField(15);
        JTextField txtGia = new JTextField(15);
        JTextField txtSoLuong = new JTextField(15);
        JTextField txtChip = new JTextField(15);
        JTextField txtSoCamera = new JTextField(15);
        JTextField txtDungLuongPin = new JTextField(15);
        JTextField txtKichThuocManHinh = new JTextField(15);

        // Tạo JButton chọn ảnh
        JButton btnChooseImage = new JButton("Chọn hình ảnh minh họa");
        btnChooseImage.addActionListener(e1 -> chooseImage());

        JPanel panel = new JPanel(new GridLayout(10, 2));
        panel.add(new JLabel("Mã sản phẩm:"));
        panel.add(txtMaSP);
        panel.add(new JLabel("Tên sản phẩm:"));
        panel.add(txtTenSP);
        panel.add(new JLabel("Hãng:"));
        panel.add(txtHang);
        panel.add(new JLabel("Giá:"));
        panel.add(txtGia);
        panel.add(new JLabel("Số lượng:"));
        panel.add(txtSoLuong);
        panel.add(new JLabel("Chip:"));
        panel.add(txtChip);
        panel.add(new JLabel("Số camera:"));
        panel.add(txtSoCamera);
        panel.add(new JLabel("Dung lượng pin:"));
        panel.add(txtDungLuongPin);
        panel.add(new JLabel("Kích thước màn hình:"));
        panel.add(txtKichThuocManHinh);
        panel.add(btnChooseImage);

        int option = JOptionPane.showConfirmDialog(this, panel, "Thêm sản phẩm", JOptionPane.OK_CANCEL_OPTION);
        if (option == JOptionPane.OK_OPTION) {
            String maSP = txtMaSP.getText();
            String tenSP = txtTenSP.getText();
            String hang = txtHang.getText();
            double gia = Double.parseDouble(txtGia.getText());
            int soLuong = Integer.parseInt(txtSoLuong.getText());
            String chip = txtChip.getText();
            int soCamera = Integer.parseInt(txtSoCamera.getText());
            int dungLuongPin = Integer.parseInt(txtDungLuongPin.getText());
            double kichThuocManHinh = Double.parseDouble(txtKichThuocManHinh.getText());
            String hinhMinhHoa = selectedImagePath; // Lấy đường dẫn hình ảnh

            SanPham sp = new SanPham(maSP, tenSP, hang, gia, soLuong, chip, soCamera, dungLuongPin, kichThuocManHinh, hinhMinhHoa);
            dsSanPham.add(sp);
            spDataManager.saveToFile(dsSanPham, "sanpham.dat"); // Lưu danh sách sản phẩm vào file

            // Cập nhật lại bảng
            updateProductTable();
        }
    }

    // Hàm chọn hình ảnh
    private String selectedImagePath = "";
    private void chooseImage() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Image files", "jpg", "png", "gif"));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            selectedImagePath = selectedFile.getAbsolutePath();
            JOptionPane.showMessageDialog(this, "Hình ảnh đã được chọn: " + selectedImagePath);
        }
    }

    // Phương thức để cập nhật lại bảng
    private void updateProductTable() {
        String[] columns = {"Mã SP", "Tên sản phẩm", "Hãng", "Giá", "Số lượng", "Chip", "Số camera", "Pin (mAh)", "Màn hình (inch)", "Hình minh họa"};
        Object[][] data = getProductData();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setDataVector(data, columns);
    }

    // Phương thức để lấy dữ liệu sản phẩm vào bảng
    private Object[][] getProductData() {
        Object[][] data = new Object[dsSanPham.size()][10];
        for (int i = 0; i < dsSanPham.size(); i++) {
            SanPham sp = dsSanPham.get(i);
            data[i][0] = sp.getMaSP();
            data[i][1] = sp.getTen();
            data[i][2] = sp.getHang();
            data[i][3] = sp.getGia();
            data[i][4] = sp.getSoLuong();
            data[i][5] = sp.getChip();
            data[i][6] = sp.getSoCamera();
            data[i][7] = sp.getDungLuongPin();
            data[i][8] = sp.getKichThuocManHinh();
            data[i][9] = sp.getHinhMinhHoa();
        }
        return data;
    }

	private void searchProduct(ActionEvent actionevent1) {
	}
}
